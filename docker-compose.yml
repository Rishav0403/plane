services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./web/Dockerfile.web
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    networks:
      - prod_network
    expose:
      - 3000
    env_file:
      - ./web/.env
    depends_on:
      - api
  space:
    container_name: space
    build:
      context: .
      dockerfile: ./space/Dockerfile.space
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    networks:
      - prod_network
    depends_on:
      - api
      - web
  api:
    container_name: api
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    entrypoint: ./bin/takeoff
    networks:
      - prod_network
    env_file:
      - ./apiserver/.env
    depends_on:
      - plane-db
      - plane-redis

  worker:
    container_name: bgworker
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: ./bin/worker
    networks:
      - prod_network
    env_file:
      - ./apiserver/.env
    depends_on:
      - api
      - plane-db
      - plane-redis

  beat-worker:
    container_name: beatworker
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: ./bin/beat
    networks:
      - prod_network
    env_file:
      - ./apiserver/.env
    depends_on:
      - api
      - plane-db
      - plane-redis

  plane-db:
    container_name: plane-db
    image: postgres:15.2-alpine
    restart: always
    expose:
      - 5432
    command: postgres -c 'max_connections=1000'
    networks:
      - prod_network
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env

  plane-redis:
    container_name: plane-redis
    image: redis:6.2.7-alpine
    restart: always
    expose:
      - 6379
    networks:
      - prod_network
    volumes:
      - redisdata:/data

  plane-minio:
    container_name: plane-minio
    image: minio/minio
    restart: always
    command: server /export --console-address ":9090"
    networks:
      - prod_network
    expose:
      - 9090
    volumes:
      - uploads:/export
    env_file:
      .env

#   # Comment this if you already have a reverse proxy running
  proxy:
    container_name: proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    networks:
      - prod_network
    ports:
      - 80:80
    environment:
      FILE_SIZE_LIMIT: 5242880
      BUCKET_NAME: uploads
    depends_on:
      - web
      - api
      - space

volumes:
  pgdata:
  redisdata:
  uploads:

networks:
  prod_network:
    driver: bridge
